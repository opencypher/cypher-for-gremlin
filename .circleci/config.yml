version: 2

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JAVA_OPTS: -Xmx256m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run:
          name: Fetch dependencies
          command: ./gradlew --no-daemon -Pci dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run all tests and checks
          command: ./gradlew --no-daemon -Pci check

      - run:
          name: Compile JMH benchmark sources
          command: ./gradlew --no-daemon -Pci :testware:performance-tests:jmhClasses

      - run:
          name: Collect test result files in single folder
          when: always
          command: |
              mkdir -p build/junit/
              cp `find . -name "*.xml" | grep "build/test-results/test/"` build/junit/

      - store_test_results:
          path: ~/repo/build/junit


  tck:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx256m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run:
          name: Fetch dependencies
          command: ./gradlew --no-daemon -Pci dependencies

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run OpenCypher TCK tests
          command: ./gradlew --no-daemon -Pci tck

      - store_test_results:
          path: ~/repo/testware/tck/build/test-results/tck

      - store_artifacts:
          path: ~/repo/testware/tck/build/reports/tests/cucumber/cucumber-html-reports


workflows:
  version: 2
  build_and_tck:
    jobs:
      - build
      - tck:
          requires:
            - build

experimental:
  notify:
    branches:
      only:
        - master
